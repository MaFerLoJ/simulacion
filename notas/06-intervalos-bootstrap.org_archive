#    -*- mode: org -*-


Archived entries from file /Users/agarbuno/github-repos/teaching/itam/cursos/2023/fall/simulacion/notas/06-intervalos-bootstrap.org


* Cobertura de intervalos de confianza 
:PROPERTIES:
:ARCHIVE_TIME: 2023-09-19 Tue 19:48
:ARCHIVE_FILE: ~/github-repos/teaching/itam/cursos/2023/fall/simulacion/notas/06-intervalos-bootstrap.org
:ARCHIVE_CATEGORY: 06-intervalos-bootstrap
:END:

#+begin_src R :exports none :results none
  ## Cobertura de intervalos --------------------------------------
#+end_src

¿Cómo sabemos que nuestros intervalos de confianza del $95\%$ nominal 
tienen cobertura real de $95\%$? Es decir, tenemos que checar:

- El procedimiento para construir intervalos debe dar intervalos tales que el
  valor poblacional está en el intervalo de confianza para 95% de las muestras.

#+REVEAL: split
Como solo tenemos una muestra, la calibración depende de argumentos teóricos o
estudios de simulación previos. Para nuestro ejemplo de casas tenemos la
población, así que podemos checar qué cobertura real tienen los intervalos
normales:

#+begin_src R :exports none :results none :eval never :tangle no
  simular_intervalos <- function(rep, size = 150){
    muestra_casas <- sample_n(poblacion_casas, size = size)
    N <- nrow(poblacion_casas)
    n <- nrow(muestra_casas)
    total_est <- (N / n) * sum(muestra_casas$precio_miles)
    ## paso 1: define el estimador
    calc_estimador_casas <- function(datos){
      total_muestra <- sum(datos$precio_miles)
      estimador_total <- (N / n) * total_muestra
      estimador_total
    }
    ## paso 2: define el proceso de remuestreo
    muestra_boot <- function(datos){
      ## tomar muestra con reemplazo del mismo tamaño
      sample_n(datos, size = nrow(datos), replace = TRUE)
    }
    ## paso 3: remuestrea y calcula el estimador
    totales_boot <- map_dbl(1:2000,  ~ calc_estimador_casas(muestra_boot(muestra_casas))) %>% 
      tibble(total_boot = .) %>%
      summarise(ee_boot = sd(total_boot)) %>% 
      mutate(inf = total_est - 2*ee_boot, sup = total_est + 2*ee_boot) %>% 
      mutate(rep = rep)
    totales_boot
  }
  ## Para recrear, correr:
  sims_intervalos <- map(1:100, ~ simular_intervalos(rep = .x))
  write_rds(sims_intervalos, "cache/sims_intervalos.rds")
#+end_src

#+begin_src R :exports none :results none 
  ## Para usar resultados en cache:
  sims_intervalos <- read_rds("cache/sims_intervalos.rds")
#+end_src

#+begin_src R :exports none :results none
  sims_tbl <- sims_intervalos |>
    bind_rows () |>
    mutate(cubre = inf < total & total < sup) 
#+end_src

#+HEADER: :width 1200 :height 500 :R-dev-args bg="transparent"
#+begin_src R :file images/casas-estimacion-intervalos.jpeg :exports results :results output graphics file
  total <- sum(poblacion_casas$precio_miles)
  ggplot(sims_tbl, aes(x = rep)) +
    geom_hline(yintercept = total, colour = "red") +
    geom_linerange(aes(ymin = inf, ymax = sup, colour = cubre)) + sin_lineas
#+end_src
#+caption: Cobertura de intervalos de confianza.
#+RESULTS:
[[file:../images/casas-estimacion-intervalos.jpeg]]

#+REVEAL: split
La cobertura para estos 100 intervalos simulados da

#+begin_src R :exports both :results org 
  total <- sum(poblacion_casas$precio_miles)
  sims_tbl |>
    summarise(cobertura = mean(cubre))  
#+end_src

#+RESULTS:
#+begin_src org
# A tibble: 1 × 1
  cobertura
      <dbl>
1      0.96
#+end_src

que es *consistente* con una cobertura real del $95\%$ (¿qué significa
``consistente''? ¿Cómo puedes checarlo con el /bootstrap/?)

#+attr_latex: :options [Generación de datos sintéticos]
#+begin_remark
En este caso teníamos la población real, y pudimos verificar la cobertura de
nuestros intervalos. En general no la tenemos. Estos ejercicios de simulación se
pueden hacer con poblaciones sintéticas que se generen con las características
que creemos va a tener nuestra población (por ejemplo, sesgo, colas largas,
etc.).
#+end_remark


#+BEGIN_NOTES
En general, no importa qué tipo de estimadores o intervalos de confianza usemos,
requerimos checar la calibración. Esto puede hacerse con ejercicios de
simulación con poblaciones sintéticas y tanto los procedimientos de muestreo
como los tamaños de muestra que nos interesa usar.
#+END_NOTES

#+REVEAL: split
Verificar la cobertura de nuestros intervalos de confianza por medio simulación está
bien estudiado para algunos casos. Por ejemplo, cuando trabajamos con estimaciones para 
poblaciones teóricas. En general sabemos que los procedimientos funcionan bien en casos: 
- con distribuciones simétricas que tengan colas no muy largas; 
- estimación de proporciones donde no tratamos con casos raros o casos seguros
  (probabilidades cercanas a 0 o 1).

